{"version":3,"file":"static/js/87.e2bb4e6d.chunk.js","mappings":"8NA6EA,EAnE2B,WACvB,OAA0DA,EAAAA,EAAAA,IACtD,SAAAC,GAAK,OAAIA,EAAMC,aADXC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,kBAAmBC,EAArC,EAAqCA,iBAIrC,GAAkCC,EAAAA,EAAAA,WAAkB,GAApD,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAVAC,EAAAA,EAAAA,YAAU,WAEFD,IADCJ,IAAqBC,MAK3B,CAACD,EAAmBC,KAKnB,oBAASK,UAAU,YAAnB,UACI,gBAAKA,UAAU,qBAAf,SACKN,GACG,gBACIM,UAAU,uBACV,cAAY,YAFhB,UAII,SAACC,EAAA,EAAD,MAEJJ,GACA,kBACIG,UAAU,gBACV,aAAW,QAFf,oBAIYL,MAGZ,gBACIK,UAAU,QACV,aAAW,kBAFf,SAIKP,EAASS,KAAI,SAAAC,GACV,OACI,gBACIH,UAAU,OAEV,aAAW,aAHf,WAKI,gBAAIA,UAAU,oBAAd,uBACa,0BAAOG,EAAKC,aAEzB,gBAAIJ,UAAU,oBAAd,qBACW,0BAAOG,EAAKE,YAEvB,gBAAIL,UAAU,oBAAd,oBACU,0BAAOG,EAAKG,YAVjBH,EAAKI","sources":["pages/PostPage/PostPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Preloader from 'components/ui/Preloader/Preloader';\r\n\r\nimport { useAppSelector } from 'app/hooks';\r\n\r\nimport './postPage.scss';\r\n\r\n// /. imports\r\n\r\nconst PostPage: React.FC = () => {\r\n    const { postData, isPostDataLoading, fetchPostsErrMsg } = useAppSelector(\r\n        state => state.postSlice\r\n    );\r\n\r\n    const [isError, setErrorStatus] = useState<boolean>(false);\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        if (!isPostDataLoading && fetchPostsErrMsg) {\r\n            setErrorStatus(true);\r\n        } else {\r\n            setErrorStatus(false);\r\n        }\r\n    }, [isPostDataLoading, fetchPostsErrMsg]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <section className=\"post-page\">\r\n            <div className=\"post-page__wrapper\">\r\n                {isPostDataLoading ? (\r\n                    <div\r\n                        className=\"post-page__preloader\"\r\n                        data-testid=\"preloader\"\r\n                    >\r\n                        <Preloader />\r\n                    </div>\r\n                ) : isError ? (\r\n                    <span\r\n                        className=\"error-message\"\r\n                        data-tesid=\"error\"\r\n                    >\r\n                        Error: {fetchPostsErrMsg}\r\n                    </span>\r\n                ) : (\r\n                    <div\r\n                        className=\"posts\"\r\n                        data-tesid=\"posts-container\"\r\n                    >\r\n                        {postData.map(item => {\r\n                            return (\r\n                                <ul\r\n                                    className=\"post\"\r\n                                    key={item.id}\r\n                                    data-tesid=\"posts-list\"\r\n                                >\r\n                                    <li className=\"post__information\">\r\n                                        User ID: <span>{item.userId}</span>\r\n                                    </li>\r\n                                    <li className=\"post__information\">\r\n                                        Title: <span>{item.title}</span>\r\n                                    </li>\r\n                                    <li className=\"post__information\">\r\n                                        Body: <span>{item.body}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default PostPage;\r\n"],"names":["useAppSelector","state","postSlice","postData","isPostDataLoading","fetchPostsErrMsg","useState","isError","setErrorStatus","useEffect","className","Preloader","map","item","userId","title","body","id"],"sourceRoot":""}