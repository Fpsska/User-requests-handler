{"version":3,"file":"static/js/221.2a905115.chunk.js","mappings":"gOAkFA,EAxE2B,WACvB,OACIA,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,cAD1BC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,iBAAkBC,EAA9C,EAA8CA,kBAG9C,GAAkCC,EAAAA,EAAAA,WAAkB,GAApD,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAVAC,EAAAA,EAAAA,YAAU,WAEFD,IADCL,IAAsBC,MAK5B,CAACD,EAAoBC,KAKpB,oBAASM,UAAU,YAAnB,UACI,gBAAKA,UAAU,qBAAf,SACKP,GACG,gBACIO,UAAU,uBACV,cAAY,YAFhB,UAII,SAACC,EAAA,EAAD,MAEJJ,GACA,kBACIG,UAAU,gBACV,cAAY,QAFhB,oBAIYN,MAGZ,gBACIM,UAAU,QACV,cAAY,kBAFhB,SAIKL,EAAkBO,KAAI,SAACC,EAAMC,GAC1B,OACI,gBACIJ,UAAU,OAEV,mCAA2BI,GAH/B,WAKI,gBAAIJ,UAAU,oBAAd,oBACU,0BAAOG,EAAKE,WAEtB,gBAAIL,UAAU,oBAAd,wBACc,0BAAOG,EAAKG,eAE1B,gBAAIN,UAAU,oBAAd,qBACW,0BAAOG,EAAKI,YAEvB,gBAAIP,UAAU,oBAAd,qBACW,0BAAOG,EAAKK,YAEvB,gBAAIR,UAAU,oBAAd,oBACU,0BAAOG,EAAKM,QAAQC,YAhBzBP,EAAKQ","sources":["pages/UserPage/UserPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport Preloader from 'components/ui/Preloader/Preloader';\r\n\r\nimport { useAppSelector } from 'app/hooks';\r\n\r\nimport './userPage.scss';\r\n\r\n// /. imports\r\n\r\nconst UserPage: React.FC = () => {\r\n    const { isTableDataLoading, fetchUsersErrMsg, filteredTableData } =\r\n        useAppSelector(state => state.tableSlice);\r\n\r\n    const [isError, setErrorStatus] = useState<boolean>(false);\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        if (!isTableDataLoading && fetchUsersErrMsg) {\r\n            setErrorStatus(true);\r\n        } else {\r\n            setErrorStatus(false);\r\n        }\r\n    }, [isTableDataLoading, fetchUsersErrMsg]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <section className=\"user-page\">\r\n            <div className=\"user-page__wrapper\">\r\n                {isTableDataLoading ? (\r\n                    <div\r\n                        className=\"user-page__preloader\"\r\n                        data-testid=\"preloader\"\r\n                    >\r\n                        <Preloader />\r\n                    </div>\r\n                ) : isError ? (\r\n                    <span\r\n                        className=\"error-message\"\r\n                        data-testid=\"error\"\r\n                    >\r\n                        Error: {fetchUsersErrMsg}\r\n                    </span>\r\n                ) : (\r\n                    <div\r\n                        className=\"users\"\r\n                        data-testid=\"users-container\"\r\n                    >\r\n                        {filteredTableData.map((item, idx) => {\r\n                            return (\r\n                                <ul\r\n                                    className=\"user\"\r\n                                    key={item.id}\r\n                                    data-testid={`users-list-${idx}`}\r\n                                >\r\n                                    <li className=\"user__information\">\r\n                                        Name: <span>{item.name}</span>\r\n                                    </li>\r\n                                    <li className=\"user__information\">\r\n                                        Username: <span>{item.username}</span>\r\n                                    </li>\r\n                                    <li className=\"user__information\">\r\n                                        Phone: <span>{item.phone}</span>\r\n                                    </li>\r\n                                    <li className=\"user__information\">\r\n                                        Email: <span>{item.email}</span>\r\n                                    </li>\r\n                                    <li className=\"user__information\">\r\n                                        City: <span>{item.address.city}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default UserPage;\r\n"],"names":["useAppSelector","state","tableSlice","isTableDataLoading","fetchUsersErrMsg","filteredTableData","useState","isError","setErrorStatus","useEffect","className","Preloader","map","item","idx","name","username","phone","email","address","city","id"],"sourceRoot":""}