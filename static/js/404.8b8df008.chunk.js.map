{"version":3,"file":"static/js/404.8b8df008.chunk.js","mappings":"kOAkFA,EAxE2B,WACvB,OACIA,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,cAD1BC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,iBAAkBC,EAA9C,EAA8CA,kBAG9C,GAAkCC,EAAAA,EAAAA,WAAkB,GAApD,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAVAC,EAAAA,EAAAA,YAAU,WAEFD,IADCL,IAAsBC,MAK5B,CAACD,EAAoBC,KAKpB,oBAASM,UAAU,YAAnB,UACI,gBAAKA,UAAU,qBAAf,SACKP,GACG,gBACIO,UAAU,uBACV,cAAY,YAFhB,UAII,SAACC,EAAA,EAAD,MAEJJ,GACA,kBACIG,UAAU,gBACV,cAAY,QAFhB,oBAIYN,MAGZ,gBACIM,UAAU,QACV,cAAY,kBAFhB,SAIKL,EAAkBO,KAAI,SAACC,EAAMC,GAC1B,OACI,gBACIJ,UAAU,OAEV,mCAA2BI,GAH/B,WAKI,gBAAIJ,UAAU,oBAAd,oBACU,0BAAOG,EAAKE,WAEtB,gBAAIL,UAAU,oBAAd,wBACc,0BAAOG,EAAKG,eAE1B,gBAAIN,UAAU,oBAAd,qBACW,0BAAOG,EAAKI,YAEvB,gBAAIP,UAAU,oBAAd,qBACW,0BAAOG,EAAKK,YAEvB,gBAAIR,UAAU,oBAAd,oBACU,0BAAOG,EAAKM,QAAQC,YAhBzBP,EAAKQ","sources":["components/pages/UserPage/UserPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useAppSelector } from '../../../app/hooks';\n\nimport Preloader from '../../common/Preloader/Preloader';\n\nimport './userPage.scss';\n\n// /. imports\n\nconst UserPage: React.FC = () => {\n    const { isTableDataLoading, fetchUsersErrMsg, filteredTableData } =\n        useAppSelector(state => state.tableSlice);\n\n    const [isError, setErrorStatus] = useState<boolean>(false);\n\n    // /. hooks\n\n    useEffect(() => {\n        if (!isTableDataLoading && fetchUsersErrMsg) {\n            setErrorStatus(true);\n        } else {\n            setErrorStatus(false);\n        }\n    }, [isTableDataLoading, fetchUsersErrMsg]);\n\n    // /. effects\n\n    return (\n        <section className=\"user-page\">\n            <div className=\"user-page__wrapper\">\n                {isTableDataLoading ? (\n                    <div\n                        className=\"user-page__preloader\"\n                        data-testid=\"preloader\"\n                    >\n                        <Preloader />\n                    </div>\n                ) : isError ? (\n                    <span\n                        className=\"error-message\"\n                        data-testid=\"error\"\n                    >\n                        Error: {fetchUsersErrMsg}\n                    </span>\n                ) : (\n                    <div\n                        className=\"users\"\n                        data-testid=\"users-container\"\n                    >\n                        {filteredTableData.map((item, idx) => {\n                            return (\n                                <ul\n                                    className=\"user\"\n                                    key={item.id}\n                                    data-testid={`users-list-${idx}`}\n                                >\n                                    <li className=\"user__information\">\n                                        Name: <span>{item.name}</span>\n                                    </li>\n                                    <li className=\"user__information\">\n                                        Username: <span>{item.username}</span>\n                                    </li>\n                                    <li className=\"user__information\">\n                                        Phone: <span>{item.phone}</span>\n                                    </li>\n                                    <li className=\"user__information\">\n                                        Email: <span>{item.email}</span>\n                                    </li>\n                                    <li className=\"user__information\">\n                                        City: <span>{item.address.city}</span>\n                                    </li>\n                                </ul>\n                            );\n                        })}\n                    </div>\n                )}\n            </div>\n        </section>\n    );\n};\n\nexport default UserPage;\n"],"names":["useAppSelector","state","tableSlice","isTableDataLoading","fetchUsersErrMsg","filteredTableData","useState","isError","setErrorStatus","useEffect","className","Preloader","map","item","idx","name","username","phone","email","address","city","id"],"sourceRoot":""}