{"version":3,"file":"static/js/184.5b45374b.chunk.js","mappings":"iOA6EA,EAnE2B,WACvB,OAA0DA,EAAAA,EAAAA,IACtD,SAAAC,GAAK,OAAIA,EAAMC,aADXC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,kBAAmBC,EAArC,EAAqCA,iBAIrC,GAAkCC,EAAAA,EAAAA,WAAkB,GAApD,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAVAC,EAAAA,EAAAA,YAAU,WAEFD,IADCJ,IAAqBC,MAK3B,CAACD,EAAmBC,KAKnB,oBAASK,UAAU,YAAnB,UACI,gBAAKA,UAAU,qBAAf,SACKN,GACG,gBACIM,UAAU,uBACV,cAAY,YAFhB,UAII,SAACC,EAAA,EAAD,MAEJJ,GACA,kBACIG,UAAU,gBACV,aAAW,QAFf,oBAIYL,MAGZ,gBACIK,UAAU,QACV,aAAW,kBAFf,SAIKP,EAASS,KAAI,SAAAC,GACV,OACI,gBACIH,UAAU,OAEV,aAAW,aAHf,WAKI,gBAAIA,UAAU,oBAAd,uBACa,0BAAOG,EAAKC,aAEzB,gBAAIJ,UAAU,oBAAd,qBACW,0BAAOG,EAAKE,YAEvB,gBAAIL,UAAU,oBAAd,oBACU,0BAAOG,EAAKG,YAVjBH,EAAKI","sources":["components/pages/PostPage/PostPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useAppSelector } from '../../../app/hooks';\n\nimport Preloader from '../../common/Preloader/Preloader';\n\nimport './postPage.scss';\n\n// /. imports\n\nconst PostPage: React.FC = () => {\n    const { postData, isPostDataLoading, fetchPostsErrMsg } = useAppSelector(\n        state => state.postSlice\n    );\n\n    const [isError, setErrorStatus] = useState<boolean>(false);\n\n    // /. hooks\n\n    useEffect(() => {\n        if (!isPostDataLoading && fetchPostsErrMsg) {\n            setErrorStatus(true);\n        } else {\n            setErrorStatus(false);\n        }\n    }, [isPostDataLoading, fetchPostsErrMsg]);\n\n    // /. effects\n\n    return (\n        <section className=\"post-page\">\n            <div className=\"post-page__wrapper\">\n                {isPostDataLoading ? (\n                    <div\n                        className=\"post-page__preloader\"\n                        data-testid=\"preloader\"\n                    >\n                        <Preloader />\n                    </div>\n                ) : isError ? (\n                    <span\n                        className=\"error-message\"\n                        data-tesid=\"error\"\n                    >\n                        Error: {fetchPostsErrMsg}\n                    </span>\n                ) : (\n                    <div\n                        className=\"posts\"\n                        data-tesid=\"posts-container\"\n                    >\n                        {postData.map(item => {\n                            return (\n                                <ul\n                                    className=\"post\"\n                                    key={item.id}\n                                    data-tesid=\"posts-list\"\n                                >\n                                    <li className=\"post__information\">\n                                        User ID: <span>{item.userId}</span>\n                                    </li>\n                                    <li className=\"post__information\">\n                                        Title: <span>{item.title}</span>\n                                    </li>\n                                    <li className=\"post__information\">\n                                        Body: <span>{item.body}</span>\n                                    </li>\n                                </ul>\n                            );\n                        })}\n                    </div>\n                )}\n            </div>\n        </section>\n    );\n};\n\nexport default PostPage;\n"],"names":["useAppSelector","state","postSlice","postData","isPostDataLoading","fetchPostsErrMsg","useState","isError","setErrorStatus","useEffect","className","Preloader","map","item","userId","title","body","id"],"sourceRoot":""}